/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package OPA;

import java.awt.Color;
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Dirk
 */
public class GUI extends javax.swing.JFrame {
    LinkedList<String> oopsFiles;
    ConfigHandler cfgHandler = new ConfigHandler();
    OptionFrame options;
    CompileHandler cHandler;
    ExecHandler eHandler;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        oopsFiles = new LinkedList<String>();
        options = new OptionFrame(cfgHandler);
        cHandler = new CompileHandler(cfgHandler, outputConsole, oopsFiles);
        eHandler = new ExecHandler(cfgHandler, outputConsole, oopsFiles);
        final String fileName = cfgHandler.getAttribute("PROGRAM_NAME");
        fileChooser.setFileFilter( new FileFilter() {
            @Override
            public boolean accept(File f) {
                return (f.getName().toLowerCase().endsWith(fileName) || f.isDirectory());
            }
            @Override
            public String getDescription() {
                    return fileName+" / OOPS Programme";
            }
            });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jcButton = new javax.swing.JButton();
        ocButton = new javax.swing.JButton();
        fileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        inputField = new javax.swing.JTextField();
        optionButton = new javax.swing.JButton();
        vmButton = new javax.swing.JButton();
        ckearButton = new javax.swing.JButton();
        inputButton = new javax.swing.JToggleButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputConsole = new javax.swing.JEditorPane();
        autoButton = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        dataMenu = new javax.swing.JMenu();
        openMenuButton = new javax.swing.JMenuItem();
        closeSeparator = new javax.swing.JPopupMenu.Separator();
        closMenuButton = new javax.swing.JMenuItem();
        compileMenu = new javax.swing.JMenu();
        cOCMenuButton = new javax.swing.JMenuItem();
        cOVMMenuButton = new javax.swing.JMenuItem();
        extraMenu = new javax.swing.JMenu();
        optionMenubutton = new javax.swing.JMenuItem();
        clearConsoleMenubutton = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OPA Standart Edition");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jcButton.setText("compiliere OOPSC");
        jcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcButtonActionPerformed(evt);
            }
        });

        ocButton.setText("compiliere OOPS");
        ocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ocButtonActionPerformed(evt);
            }
        });

        fileButton.setText("...");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });

        inputField.setEnabled(false);
        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });
        inputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputFieldKeyTyped(evt);
            }
        });

        optionButton.setText("Optionen");
        optionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionButtonActionPerformed(evt);
            }
        });

        vmButton.setText("compiliere OOPSVM");
        vmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vmButtonActionPerformed(evt);
            }
        });

        ckearButton.setText("clear");
        ckearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckearButtonActionPerformed(evt);
            }
        });

        inputButton.setText("mit Eingabe");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        outputConsole.setContentType("text/html"); // NOI18N
        outputConsole.setEditable(false);
        outputConsole.setText("<html>\r\n  <head>\r\n  </head>\r\n  <body>\r\n<font color=#000000>\n</font>\n  </body>\r\n</html>\r\n");
        jScrollPane3.setViewportView(outputConsole);

        autoButton.setText("Starte mit .IO");
        autoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoButtonActionPerformed(evt);
            }
        });

        dataMenu.setText("Datei");

        openMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK));
        openMenuButton.setText("Datei Ã¶ffnen...");
        openMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuButtonActionPerformed(evt);
            }
        });
        dataMenu.add(openMenuButton);
        dataMenu.add(closeSeparator);

        closMenuButton.setText("Beenden");
        closMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closMenuButtonActionPerformed(evt);
            }
        });
        dataMenu.add(closMenuButton);

        jMenuBar1.add(dataMenu);

        compileMenu.setText("Compilieren");

        cOCMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        cOCMenuButton.setText("compiliere OOPSC");
        cOCMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cOCMenuButtonActionPerformed(evt);
            }
        });
        compileMenu.add(cOCMenuButton);

        cOVMMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK));
        cOVMMenuButton.setText("compiliere OOPSVM");
        cOVMMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cOVMMenuButtonActionPerformed(evt);
            }
        });
        compileMenu.add(cOVMMenuButton);

        jMenuBar1.add(compileMenu);

        extraMenu.setText("Extras");

        optionMenubutton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));
        optionMenubutton.setText("Optionen");
        optionMenubutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionMenubuttonActionPerformed(evt);
            }
        });
        extraMenu.add(optionMenubutton);

        clearConsoleMenubutton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK));
        clearConsoleMenubutton.setText("Console leeren");
        clearConsoleMenubutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearConsoleMenubuttonActionPerformed(evt);
            }
        });
        extraMenu.add(clearConsoleMenubutton);

        jMenuBar1.add(extraMenu);

        helpMenu.setText("Hilfe");
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jcButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vmButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(optionButton))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ckearButton))
            .addComponent(inputField, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(autoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ocButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcButton)
                    .addComponent(optionButton)
                    .addComponent(vmButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileButton)
                    .addComponent(ocButton)
                    .addComponent(inputButton)
                    .addComponent(autoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckearButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("OIP")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(true);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            oopsFiles.clear();
            for(File file : files){
                String onlyName = file.getName();
                onlyName = onlyName.substring(0, onlyName.length()-cfgHandler.getAttribute("PROGRAM_NAME").length());
                if(!oopsFiles.contains(onlyName)){
                    oopsFiles.add(onlyName);
                }
            }
            cfgHandler.setAttribute("OIP", files[0].getParent());
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_fileButtonActionPerformed

    private void optionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionButtonActionPerformed
    options.setVisible(true);
    options.setLocationRelativeTo(this);
    }//GEN-LAST:event_optionButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    cfgHandler.writeConfig();
    
    }//GEN-LAST:event_formWindowClosing

    private void jcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcButtonActionPerformed
        cHandler.compileOOPSC();
    }//GEN-LAST:event_jcButtonActionPerformed

    private void vmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vmButtonActionPerformed
        cHandler.compileOOPSVM();
    }//GEN-LAST:event_vmButtonActionPerformed

    private void ckearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckearButtonActionPerformed
        outputConsole.setText("");
    }//GEN-LAST:event_ckearButtonActionPerformed

    private void ocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ocButtonActionPerformed
        cHandler.compileOOPS();
    }//GEN-LAST:event_ocButtonActionPerformed

    private void cOCMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cOCMenuButtonActionPerformed
        cHandler.compileOOPSC();
    }//GEN-LAST:event_cOCMenuButtonActionPerformed

    private void cOVMMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cOVMMenuButtonActionPerformed
        cHandler.compileOOPSVM();
    }//GEN-LAST:event_cOVMMenuButtonActionPerformed

    private void openMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuButtonActionPerformed
        fileButtonActionPerformed(evt);
    }//GEN-LAST:event_openMenuButtonActionPerformed

    private void closMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closMenuButtonActionPerformed
        cfgHandler.writeConfig();
        System.exit(0);
    }//GEN-LAST:event_closMenuButtonActionPerformed

    private void clearConsoleMenubuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearConsoleMenubuttonActionPerformed
        outputConsole.setText("");
    }//GEN-LAST:event_clearConsoleMenubuttonActionPerformed

    private void optionMenubuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionMenubuttonActionPerformed
    options.setVisible(true);
    options.setLocationRelativeTo(this);
    }//GEN-LAST:event_optionMenubuttonActionPerformed

    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
        if(inputButton.isSelected()){
            if(eHandler.execManuell()){
                inputField.requestFocus();
                inputField.setEnabled(true);
                autoButton.setEnabled(false);
                ocButton.setEnabled(false);
            }else{
                inputButton.setSelected(false);
                write("<font color=#\""+Integer.toHexString(Color.RED.getRGB()).substring(2)+"\"><p>ERROR No selected OOPS-Program.</p></font>");
            }
        }else{
            inputField.setEnabled(false);
            inputField.setText("");
            autoButton.setEnabled(true);
            ocButton.setEnabled(true);
            eHandler.abbort();
        }
    }//GEN-LAST:event_inputButtonActionPerformed

    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldActionPerformed

    private void inputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyTyped
        if(evt.getKeyChar() == '\n'){
            eHandler.ioManuell(inputField.getText());
            inputField.setText("");
        }
    }//GEN-LAST:event_inputFieldKeyTyped

    private void autoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoButtonActionPerformed
        if(autoButton.isSelected()){
                inputButton.setEnabled(false);
                ocButton.setEnabled(false);
            if(eHandler.execAuto()){
                inputButton.setEnabled(true);
                ocButton.setEnabled(true);
                autoButton.setSelected(false);
            }
        }else{
            inputButton.setEnabled(true);
            ocButton.setEnabled(true);
            eHandler.abbort();
        }
    }//GEN-LAST:event_autoButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton autoButton;
    private javax.swing.JMenuItem cOCMenuButton;
    private javax.swing.JMenuItem cOVMMenuButton;
    private javax.swing.JButton ckearButton;
    private javax.swing.JMenuItem clearConsoleMenubutton;
    private javax.swing.JMenuItem closMenuButton;
    private javax.swing.JPopupMenu.Separator closeSeparator;
    private javax.swing.JMenu compileMenu;
    private javax.swing.JMenu dataMenu;
    private javax.swing.JMenu extraMenu;
    private javax.swing.JButton fileButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JToggleButton inputButton;
    private javax.swing.JTextField inputField;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jcButton;
    private javax.swing.JButton ocButton;
    private javax.swing.JMenuItem openMenuButton;
    private javax.swing.JButton optionButton;
    private javax.swing.JMenuItem optionMenubutton;
    private javax.swing.JEditorPane outputConsole;
    private javax.swing.JButton vmButton;
    // End of variables declaration//GEN-END:variables

    private void write(String nextLine){
        String text = outputConsole.getText();
        String[] pieces = text.split("<body>");
        pieces = pieces[1].split("</body>");
        outputConsole.setText(pieces[0]+"\n "+nextLine);
    }
}
