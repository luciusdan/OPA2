/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package OPA;

import java.io.File;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Dirk
 */
public class OptionFrame extends javax.swing.JFrame {
    ConfigHandler cfgHandler;
    FileFilter oopscFilter;
    FileFilter oopsvmFilter;
    FileFilter elseFilter;
    /**
     * Creates new form OptionFrame
     */
    public OptionFrame(ConfigHandler cfgHandler) {
        this.cfgHandler = cfgHandler;
        initComponents();
        //fromPathField.setText(objHandler.oopsC.getFromPath().getPath());
        //toPathField.setText(objHandler.oopsC.getToPath().getPath());
        cButton.setSelected(cfgHandler.getAttributeBoolean("-C"));
        lButton.setSelected(cfgHandler.getAttributeBoolean("-L"));
        sButton.setSelected(cfgHandler.getAttributeBoolean("-S"));
        iButton.setSelected(cfgHandler.getAttributeBoolean("-I"));
        pathButton.setSelected(cfgHandler.getAttributeBoolean("FULL"));
        javaExecPathBox.setSelected(cfgHandler.getAttributeBoolean("JP"));
        ssButton.setValue(cfgHandler.getAttributeInt("-SS"));
        hsButton.setValue(cfgHandler.getAttributeInt("-HS"));
        
        toJCText.setText(cfgHandler.getAttribute("JOP"));
        fromJCText.setText(cfgHandler.getAttribute("JIP"));
        toVMText.setText(cfgHandler.getAttribute("VMOP"));
        fromVMText.setText(cfgHandler.getAttribute("VMIP"));
        toOCText.setText(cfgHandler.getAttribute("OOP"));
        String sel = cfgHandler.getAttribute("-AS");
        if(sel.equals("1")){
            asBG.setSelected(as1Button.getModel(), true);
        }else if(sel.equals("2")){
            asBG.setSelected(as2Button.getModel(), true);
        }else if(sel.equals("ALL")){
            asBG.setSelected(asnButton.getModel(), true);
        }
        sel = cfgHandler.getAttribute("-R2");
        if(sel.equals("UP")){
            r2BG.setSelected(r2UpButton.getModel(), true);
        }else if(sel.equals("DOWN")){
            r2BG.setSelected(r2DownButton.getModel(), true);
        }else if(sel.equals("NONE")){
            r2BG.setSelected(r2NoneButton.getModel(), true);
        }
        sel = cfgHandler.getAttribute("-R4");
        if(sel.equals("UP")){
            r4BG.setSelected(r4UpButton.getModel(), true);
        }else if(sel.equals("DOWN")){
            r4BG.setSelected(r4DownButton.getModel(), true);
        }else if(sel.equals("NONE")){
            r4BG.setSelected(r4NoneButton.getModel(), true);
        }
        
        final String oopscName = cfgHandler.getAttribute("OOPSC_NAME");
        oopscFilter =  new FileFilter() {
                @Override
                public boolean accept(File f) {
                    return (f.getName().equals(oopscName+".java") || f.isDirectory());
                }
                @Override
                public String getDescription() {
                        return oopscName+".java";
                }
            };
        final String oopsvmName = cfgHandler.getAttribute("OOPSVM_NAME");
        oopsvmFilter =  new FileFilter() {
                @Override
                public boolean accept(File f) {
                    return (f.getName().equals(oopsvmName+".java") || f.isDirectory());
                }
                @Override
                public String getDescription() {
                        return oopsvmName+".java";
                }
            };
        elseFilter =  new FileFilter() {
                @Override
                public boolean accept(File f) {
                    return (f.isDirectory());
                }
                @Override
                public String getDescription() {
                        return "";
                }
            };
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        asBG = new javax.swing.ButtonGroup();
        r2BG = new javax.swing.ButtonGroup();
        r4BG = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JTabbedPane();
        javaFramePanel = new javax.swing.JPanel();
        javaLabel = new javax.swing.JLabel();
        javaExecPathBox = new javax.swing.JCheckBox();
        fromJCButton = new javax.swing.JButton();
        toJCButton = new javax.swing.JButton();
        fromJCText = new javax.swing.JTextField();
        toJCText = new javax.swing.JTextField();
        toVMText = new javax.swing.JTextField();
        fromVMText = new javax.swing.JTextField();
        fromVMButton = new javax.swing.JButton();
        toVMButton = new javax.swing.JButton();
        javaLabel1 = new javax.swing.JLabel();
        javaLabel2 = new javax.swing.JLabel();
        oopscFramePanel = new javax.swing.JPanel();
        oopscLabel = new javax.swing.JLabel();
        toOCPanel = new javax.swing.JButton();
        toOCText = new javax.swing.JTextField();
        ereignissPanel = new javax.swing.JPanel();
        cButton = new javax.swing.JCheckBox();
        lButton = new javax.swing.JCheckBox();
        sButton = new javax.swing.JCheckBox();
        iButton = new javax.swing.JCheckBox();
        stackLabel = new javax.swing.JLabel();
        heapLabel = new javax.swing.JLabel();
        ssButton = new javax.swing.JSpinner();
        hsButton = new javax.swing.JSpinner();
        ereignissLabel = new javax.swing.JLabel();
        oopsvmFramePanel = new javax.swing.JPanel();
        manuellVMPanel = new javax.swing.JPanel();
        manuellVMLabel = new javax.swing.JLabel();
        iVMButton = new javax.swing.JCheckBox();
        mVMButton = new javax.swing.JCheckBox();
        rVMButton = new javax.swing.JCheckBox();
        registerPanel = new javax.swing.JPanel();
        r2Panel = new javax.swing.JPanel();
        r2UpButton = new javax.swing.JRadioButton();
        r2DownButton = new javax.swing.JRadioButton();
        r2NoneButton = new javax.swing.JRadioButton();
        r2Label = new javax.swing.JLabel();
        registerLabel = new javax.swing.JLabel();
        r4Panel = new javax.swing.JPanel();
        r4UpButton = new javax.swing.JRadioButton();
        r4DownButton = new javax.swing.JRadioButton();
        r4NoneButton = new javax.swing.JRadioButton();
        r4Label = new javax.swing.JLabel();
        assPanel = new javax.swing.JPanel();
        assLabel = new javax.swing.JLabel();
        as1Button = new javax.swing.JRadioButton();
        as2Button = new javax.swing.JRadioButton();
        asnButton = new javax.swing.JRadioButton();
        onlyButton = new javax.swing.JCheckBox();
        pathButton = new javax.swing.JCheckBox();

        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setTitle("Optionen");
        setResizable(false);

        javaFramePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javaLabel.setText("JavaC Optionen");

        javaExecPathBox.setSelected(true);
        javaExecPathBox.setText("Java Pfad verwenden");
        javaExecPathBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaExecPathBoxActionPerformed(evt);
            }
        });

        fromJCButton.setText("Von");
        fromJCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromJCButtonActionPerformed(evt);
            }
        });

        toJCButton.setText("zu");
        toJCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toJCButtonActionPerformed(evt);
            }
        });

        fromJCText.setEditable(false);

        toJCText.setEditable(false);

        toVMText.setEditable(false);

        fromVMText.setEditable(false);

        fromVMButton.setText("Von");
        fromVMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromVMButtonActionPerformed(evt);
            }
        });

        toVMButton.setText("zu");
        toVMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toVMButtonActionPerformed(evt);
            }
        });

        javaLabel1.setText("OOPSC");

        javaLabel2.setText("OOPSVM");

        javax.swing.GroupLayout javaFramePanelLayout = new javax.swing.GroupLayout(javaFramePanel);
        javaFramePanel.setLayout(javaFramePanelLayout);
        javaFramePanelLayout.setHorizontalGroup(
            javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javaFramePanelLayout.createSequentialGroup()
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(javaLabel)
                    .addComponent(javaExecPathBox))
                .addGap(0, 211, Short.MAX_VALUE))
            .addGroup(javaFramePanelLayout.createSequentialGroup()
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javaFramePanelLayout.createSequentialGroup()
                        .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toJCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromJCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromJCText)
                            .addComponent(toJCText)))
                    .addGroup(javaFramePanelLayout.createSequentialGroup()
                        .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toVMButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromVMButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromVMText)
                            .addComponent(toVMText)))
                    .addGroup(javaFramePanelLayout.createSequentialGroup()
                        .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(javaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(javaLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        javaFramePanelLayout.setVerticalGroup(
            javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javaFramePanelLayout.createSequentialGroup()
                .addComponent(javaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaExecPathBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromJCButton)
                    .addComponent(fromJCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toJCButton)
                    .addComponent(toJCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromVMButton)
                    .addComponent(fromVMText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(javaFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toVMButton)
                    .addComponent(toVMText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        mainPanel.addTab("JAVA", javaFramePanel);

        oopscFramePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        oopscLabel.setText("OOPSC Optionen");

        toOCPanel.setText("zu");
        toOCPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toOCPanelActionPerformed(evt);
            }
        });

        toOCText.setEditable(false);

        ereignissPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cButton.setText("Kontextanalyse");
        cButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButtonActionPerformed(evt);
            }
        });

        lButton.setText("lexikalische Analyse");
        lButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lButtonActionPerformed(evt);
            }
        });

        sButton.setText("syntaktische Analyse");
        sButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sButtonActionPerformed(evt);
            }
        });

        iButton.setText("Bezeichner Zuordnung");
        iButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iButtonActionPerformed(evt);
            }
        });

        stackLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stackLabel.setText("Stack Größe");

        heapLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        heapLabel.setText("Heap Größe");

        ssButton.setValue(50
        );
        ssButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ssButtonStateChanged(evt);
            }
        });

        hsButton.setValue(100);
        hsButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hsButtonStateChanged(evt);
            }
        });

        ereignissLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ereignissLabel.setText("Ergebniss anzeigen");

        javax.swing.GroupLayout ereignissPanelLayout = new javax.swing.GroupLayout(ereignissPanel);
        ereignissPanel.setLayout(ereignissPanelLayout);
        ereignissPanelLayout.setHorizontalGroup(
            ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ereignissPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ereignissPanelLayout.createSequentialGroup()
                        .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ereignissPanelLayout.createSequentialGroup()
                                .addComponent(sButton)
                                .addGap(56, 56, 56)
                                .addComponent(ssButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ereignissPanelLayout.createSequentialGroup()
                                .addComponent(cButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heapLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ereignissPanelLayout.createSequentialGroup()
                        .addComponent(lButton)
                        .addGap(64, 64, 64)
                        .addComponent(iButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(ereignissLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ereignissPanelLayout.setVerticalGroup(
            ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ereignissPanelLayout.createSequentialGroup()
                .addComponent(ereignissLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lButton)
                    .addComponent(iButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sButton)
                    .addComponent(ssButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stackLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ereignissPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cButton)
                    .addComponent(hsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heapLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout oopscFramePanelLayout = new javax.swing.GroupLayout(oopscFramePanel);
        oopscFramePanel.setLayout(oopscFramePanelLayout);
        oopscFramePanelLayout.setHorizontalGroup(
            oopscFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oopscFramePanelLayout.createSequentialGroup()
                .addComponent(oopscLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(oopscFramePanelLayout.createSequentialGroup()
                .addGroup(oopscFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ereignissPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(oopscFramePanelLayout.createSequentialGroup()
                        .addComponent(toOCPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toOCText)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        oopscFramePanelLayout.setVerticalGroup(
            oopscFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oopscFramePanelLayout.createSequentialGroup()
                .addComponent(oopscLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ereignissPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addGroup(oopscFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toOCPanel)
                    .addComponent(toOCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        mainPanel.addTab("OOPSC", oopscFramePanel);

        manuellVMPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        manuellVMLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        manuellVMLabel.setText("Einstellungen der manuellen Ausführung");

        iVMButton.setText("zeige Instruktionen");
        iVMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iVMButtonActionPerformed(evt);
            }
        });

        mVMButton.setText("zeige Speicher");
        mVMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mVMButtonActionPerformed(evt);
            }
        });

        rVMButton.setText("zeige Registersatz");
        rVMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rVMButtonActionPerformed(evt);
            }
        });

        registerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        r2Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        r2BG.add(r2UpButton);
        r2UpButton.setText("von Oben");
        r2UpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2UpButtonActionPerformed(evt);
            }
        });

        r2BG.add(r2DownButton);
        r2DownButton.setText("von Unten");
        r2DownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2DownButtonActionPerformed(evt);
            }
        });

        r2BG.add(r2NoneButton);
        r2NoneButton.setText("nicht");
        r2NoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2NoneButtonActionPerformed(evt);
            }
        });

        r2Label.setText("Register R2");

        javax.swing.GroupLayout r2PanelLayout = new javax.swing.GroupLayout(r2Panel);
        r2Panel.setLayout(r2PanelLayout);
        r2PanelLayout.setHorizontalGroup(
            r2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(r2PanelLayout.createSequentialGroup()
                .addGroup(r2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(r2PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(r2Label))
                    .addComponent(r2UpButton)
                    .addComponent(r2NoneButton)
                    .addComponent(r2DownButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        r2PanelLayout.setVerticalGroup(
            r2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(r2PanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(r2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r2UpButton)
                .addGap(1, 1, 1)
                .addComponent(r2DownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r2NoneButton)
                .addGap(4, 4, 4))
        );

        registerLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        registerLabel.setText("Register anzeigen");

        r4Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        r4BG.add(r4UpButton);
        r4UpButton.setText("von Oben");
        r4UpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r4UpButtonActionPerformed(evt);
            }
        });

        r4BG.add(r4DownButton);
        r4DownButton.setText("von Unten");
        r4DownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r4DownButtonActionPerformed(evt);
            }
        });

        r4BG.add(r4NoneButton);
        r4NoneButton.setText("nicht");
        r4NoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r4NoneButtonActionPerformed(evt);
            }
        });

        r4Label.setText("Register R4");

        javax.swing.GroupLayout r4PanelLayout = new javax.swing.GroupLayout(r4Panel);
        r4Panel.setLayout(r4PanelLayout);
        r4PanelLayout.setHorizontalGroup(
            r4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(r4PanelLayout.createSequentialGroup()
                .addGroup(r4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(r4PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(r4Label))
                    .addComponent(r4UpButton)
                    .addComponent(r4NoneButton)
                    .addComponent(r4DownButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        r4PanelLayout.setVerticalGroup(
            r4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, r4PanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(r4Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r4UpButton)
                .addGap(1, 1, 1)
                .addComponent(r4DownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r4NoneButton)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addComponent(r2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(registerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addComponent(registerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(r2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout manuellVMPanelLayout = new javax.swing.GroupLayout(manuellVMPanel);
        manuellVMPanel.setLayout(manuellVMPanelLayout);
        manuellVMPanelLayout.setHorizontalGroup(
            manuellVMPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manuellVMPanelLayout.createSequentialGroup()
                .addComponent(manuellVMLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(413, 413, 413))
            .addGroup(manuellVMPanelLayout.createSequentialGroup()
                .addGroup(manuellVMPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iVMButton)
                    .addComponent(mVMButton)
                    .addComponent(rVMButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        manuellVMPanelLayout.setVerticalGroup(
            manuellVMPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manuellVMPanelLayout.createSequentialGroup()
                .addComponent(manuellVMLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(manuellVMPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manuellVMPanelLayout.createSequentialGroup()
                        .addComponent(iVMButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mVMButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rVMButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(manuellVMPanelLayout.createSequentialGroup()
                        .addComponent(registerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        assPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        assLabel.setText("Assemblierungsläufe");

        asBG.add(as1Button);
        as1Button.setText("1 Durchlauf");
        as1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                as1ButtonActionPerformed(evt);
            }
        });

        asBG.add(as2Button);
        as2Button.setText("2 Durchläufe");
        as2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                as2ButtonActionPerformed(evt);
            }
        });

        asBG.add(asnButton);
        asnButton.setText("alle Durchläufe");
        asnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout assPanelLayout = new javax.swing.GroupLayout(assPanel);
        assPanel.setLayout(assPanelLayout);
        assPanelLayout.setHorizontalGroup(
            assPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(assLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(assPanelLayout.createSequentialGroup()
                .addComponent(as1Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(as2Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(asnButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        assPanelLayout.setVerticalGroup(
            assPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assPanelLayout.createSequentialGroup()
                .addComponent(assLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(assPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(as1Button)
                    .addComponent(as2Button)
                    .addComponent(asnButton)))
        );

        onlyButton.setText("nur Übersetzen");
        onlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout oopsvmFramePanelLayout = new javax.swing.GroupLayout(oopsvmFramePanel);
        oopsvmFramePanel.setLayout(oopsvmFramePanelLayout);
        oopsvmFramePanelLayout.setHorizontalGroup(
            oopsvmFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oopsvmFramePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oopsvmFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manuellVMPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addGroup(oopsvmFramePanelLayout.createSequentialGroup()
                        .addComponent(onlyButton)
                        .addGap(0, 227, Short.MAX_VALUE))
                    .addComponent(assPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        oopsvmFramePanelLayout.setVerticalGroup(
            oopsvmFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oopsvmFramePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manuellVMPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onlyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        mainPanel.addTab("OOPSVM", oopsvmFramePanel);

        pathButton.setSelected(true);
        pathButton.setText("Pfade anzeigen");
        pathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pathButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pathButton)
                .addGap(4, 4, 4)
                .addComponent(mainPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromJCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromJCButtonActionPerformed
        fileChooser.setFileFilter(oopscFilter);
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("JIP")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getParent();
            cfgHandler.setAttribute("JIP", filePath);
            fromJCText.setText (filePath);
            

        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_fromJCButtonActionPerformed

    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        if(cButton.isSelected()){
            cfgHandler.setAttribute("-C", "TRUE");
        }else{
            cfgHandler.setAttribute("-C", "FALSE");
        }
    }//GEN-LAST:event_cButtonActionPerformed

    private void lButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lButtonActionPerformed
        if(lButton.isSelected()){
            cfgHandler.setAttribute("-L", "TRUE");
        }else{
            cfgHandler.setAttribute("-L", "FALSE");
        }
    }//GEN-LAST:event_lButtonActionPerformed

    private void sButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sButtonActionPerformed
        if(sButton.isSelected()){
            cfgHandler.setAttribute("-S", "TRUE");
        }else{
            cfgHandler.setAttribute("-S", "FALSE");
        }
    }//GEN-LAST:event_sButtonActionPerformed

    private void iButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iButtonActionPerformed
        if(iButton.isSelected()){
            cfgHandler.setAttribute("-I", "TRUE");
        }else{
            cfgHandler.setAttribute("-I", "FALSE");
        }
    }//GEN-LAST:event_iButtonActionPerformed

    private void ssButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ssButtonStateChanged
        cfgHandler.setAttribute("-SS", ""+ssButton.getValue());

    }//GEN-LAST:event_ssButtonStateChanged

    private void hsButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hsButtonStateChanged
        cfgHandler.setAttribute("-HS", ""+hsButton.getValue());

    }//GEN-LAST:event_hsButtonStateChanged

    private void javaExecPathBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaExecPathBoxActionPerformed
    if(lButton.isSelected()){
            cfgHandler.setAttribute("JP", "TRUE");
        }else{
            cfgHandler.setAttribute("JP", "FALSE");
        }
    }//GEN-LAST:event_javaExecPathBoxActionPerformed

    private void toJCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toJCButtonActionPerformed
        fileChooser.setFileFilter(elseFilter);
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("JOP")));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            cfgHandler.setAttribute("JOP", filePath);
            toJCText.setText (filePath);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_toJCButtonActionPerformed

    private void toOCPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toOCPanelActionPerformed
        fileChooser.setFileFilter(elseFilter);
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("OOP")));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            cfgHandler.setAttribute("OOP", filePath);
            toOCText.setText (filePath);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_toOCPanelActionPerformed

    private void fromVMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromVMButtonActionPerformed
        fileChooser.setFileFilter(oopsvmFilter);
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("VMIP")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getParent();
            cfgHandler.setAttribute("VMIP", filePath);
            fromVMText.setText (filePath);
            

        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_fromVMButtonActionPerformed

    private void toVMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toVMButtonActionPerformed
        fileChooser.setFileFilter(elseFilter);
        fileChooser.setCurrentDirectory(new File (cfgHandler.getAttribute("VMOP")));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            cfgHandler.setAttribute("VMOP", filePath);
            toVMText.setText (filePath);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_toVMButtonActionPerformed

    private void r2UpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2UpButtonActionPerformed
        r2Box();
    }//GEN-LAST:event_r2UpButtonActionPerformed

    private void r4UpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r4UpButtonActionPerformed
        r4Box();
    }//GEN-LAST:event_r4UpButtonActionPerformed

    private void iVMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iVMButtonActionPerformed
        if(iVMButton.isSelected()){
            cfgHandler.setAttribute("-IVM", "TRUE");
        }else{
            cfgHandler.setAttribute("-IVM", "FALSE");
        }
    }//GEN-LAST:event_iVMButtonActionPerformed

    private void mVMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mVMButtonActionPerformed
        if(mVMButton.isSelected()){
            cfgHandler.setAttribute("-MVM", "TRUE");
        }else{
            cfgHandler.setAttribute("-MVM", "FALSE");
        }
    }//GEN-LAST:event_mVMButtonActionPerformed

    private void rVMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rVMButtonActionPerformed
        if(rVMButton.isSelected()){
            cfgHandler.setAttribute("-RVM", "TRUE");
        }else{
            cfgHandler.setAttribute("-RVM", "FALSE");
        }
    }//GEN-LAST:event_rVMButtonActionPerformed

    private void onlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlyButtonActionPerformed
        if(onlyButton.isSelected()){
            cfgHandler.setAttribute("-CVM", "TRUE");
        }else{
            cfgHandler.setAttribute("-CVM", "FALSE");
        }
    }//GEN-LAST:event_onlyButtonActionPerformed

    private void r4DownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r4DownButtonActionPerformed
        r4Box();
    }//GEN-LAST:event_r4DownButtonActionPerformed

    private void r4NoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r4NoneButtonActionPerformed
        r4Box();
    }//GEN-LAST:event_r4NoneButtonActionPerformed

    private void r2DownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2DownButtonActionPerformed
        r2Box();
    }//GEN-LAST:event_r2DownButtonActionPerformed

    private void r2NoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2NoneButtonActionPerformed
        r2Box();
    }//GEN-LAST:event_r2NoneButtonActionPerformed

    private void as1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_as1ButtonActionPerformed
        asBox();
    }//GEN-LAST:event_as1ButtonActionPerformed

    private void as2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_as2ButtonActionPerformed
        asBox();
    }//GEN-LAST:event_as2ButtonActionPerformed

    private void asnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asnButtonActionPerformed
        asBox();
    }//GEN-LAST:event_asnButtonActionPerformed

    private void pathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathButtonActionPerformed
    if(pathButton.isSelected()){
            cfgHandler.setAttribute("FULL", "TRUE");
        }else{
            cfgHandler.setAttribute("FULL", "FALSE");
        }
    }//GEN-LAST:event_pathButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton as1Button;
    private javax.swing.JRadioButton as2Button;
    private javax.swing.ButtonGroup asBG;
    private javax.swing.JRadioButton asnButton;
    private javax.swing.JLabel assLabel;
    private javax.swing.JPanel assPanel;
    private javax.swing.JCheckBox cButton;
    private javax.swing.JLabel ereignissLabel;
    private javax.swing.JPanel ereignissPanel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton fromJCButton;
    private javax.swing.JTextField fromJCText;
    private javax.swing.JButton fromVMButton;
    private javax.swing.JTextField fromVMText;
    private javax.swing.JLabel heapLabel;
    private javax.swing.JSpinner hsButton;
    private javax.swing.JCheckBox iButton;
    private javax.swing.JCheckBox iVMButton;
    private javax.swing.JCheckBox javaExecPathBox;
    private javax.swing.JPanel javaFramePanel;
    private javax.swing.JLabel javaLabel;
    private javax.swing.JLabel javaLabel1;
    private javax.swing.JLabel javaLabel2;
    private javax.swing.JCheckBox lButton;
    private javax.swing.JCheckBox mVMButton;
    private javax.swing.JTabbedPane mainPanel;
    private javax.swing.JLabel manuellVMLabel;
    private javax.swing.JPanel manuellVMPanel;
    private javax.swing.JCheckBox onlyButton;
    private javax.swing.JPanel oopscFramePanel;
    private javax.swing.JLabel oopscLabel;
    private javax.swing.JPanel oopsvmFramePanel;
    private javax.swing.JCheckBox pathButton;
    private javax.swing.ButtonGroup r2BG;
    private javax.swing.JRadioButton r2DownButton;
    private javax.swing.JLabel r2Label;
    private javax.swing.JRadioButton r2NoneButton;
    private javax.swing.JPanel r2Panel;
    private javax.swing.JRadioButton r2UpButton;
    private javax.swing.ButtonGroup r4BG;
    private javax.swing.JRadioButton r4DownButton;
    private javax.swing.JLabel r4Label;
    private javax.swing.JRadioButton r4NoneButton;
    private javax.swing.JPanel r4Panel;
    private javax.swing.JRadioButton r4UpButton;
    private javax.swing.JCheckBox rVMButton;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JCheckBox sButton;
    private javax.swing.JSpinner ssButton;
    private javax.swing.JLabel stackLabel;
    private javax.swing.JButton toJCButton;
    private javax.swing.JTextField toJCText;
    private javax.swing.JButton toOCPanel;
    private javax.swing.JTextField toOCText;
    private javax.swing.JButton toVMButton;
    private javax.swing.JTextField toVMText;
    // End of variables declaration//GEN-END:variables

    private void r2Box(){
        ButtonModel sel = r2BG.getSelection();
        if(sel.equals(r2UpButton.getModel())){
            cfgHandler.setAttribute("-R2", "UP");
        }else if(sel.equals(r2DownButton.getModel())){
            cfgHandler.setAttribute("-R2", "DOWN");
        }else if(sel.equals(r2NoneButton.getModel())){
            cfgHandler.setAttribute("-R2", "NONE");
        }
    }
    private void r4Box(){
        ButtonModel sel = r4BG.getSelection();
        if(sel.equals(r4UpButton.getModel())){
            cfgHandler.setAttribute("-R4", "UP");
        }else if(sel.equals(r4DownButton.getModel())){
            cfgHandler.setAttribute("-R4", "DOWN");
        }else if(sel.equals(r4NoneButton.getModel())){
            cfgHandler.setAttribute("-R4", "NONE");
        }
    }
    
    private void asBox(){
        ButtonModel sel = asBG.getSelection();
        if(sel.equals(as1Button.getModel())){
            cfgHandler.setAttribute("-AS", "1");
        }else if(sel.equals(as2Button.getModel())){
            cfgHandler.setAttribute("-AS", "2");
        }else if(sel.equals(asnButton.getModel())){
            cfgHandler.setAttribute("-AS", "ALL");
        }
    }
}
