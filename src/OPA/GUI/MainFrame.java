/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package OPA.GUI;

import OPA.CompileHandler;
import OPA.ExecHandler;
import OPA.Object.ObjectHandler;
import OPA.Output.ConsoleHandler;
import java.awt.Color;
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Dirk
 */
public class MainFrame extends javax.swing.JFrame {
    OptionFrame optionFrame;
    
    ObjectHandler objHandler;
    ConsoleHandler console;
    
    LinkedList<String> oopsFiles;
    CompileHandler cHandler;
    ExecHandler eHandler;
    
    /**
     * Creates new form GUI
     */
    public MainFrame(ObjectHandler objHandler) {
        initComponents();
        this.optionFrame = new OptionFrame(objHandler);
        
        this.objHandler = objHandler;
        this.console = new ConsoleHandler(consolePane);
        cHandler = new CompileHandler(objHandler, console);
        eHandler = new ExecHandler(oopsFiles,objHandler,console);
        setFilter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jcButton = new javax.swing.JButton();
        ocButton = new javax.swing.JButton();
        fileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        inputField = new javax.swing.JTextField();
        optionButton = new javax.swing.JButton();
        vmButton = new javax.swing.JButton();
        ckearButton = new javax.swing.JButton();
        inputButton = new javax.swing.JToggleButton();
        autoButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        consolePane = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        dataMenu = new javax.swing.JMenu();
        openMenuButton = new javax.swing.JMenuItem();
        closeSeparator = new javax.swing.JPopupMenu.Separator();
        closMenuButton = new javax.swing.JMenuItem();
        compileMenu = new javax.swing.JMenu();
        cOCMenuButton = new javax.swing.JMenuItem();
        cOVMMenuButton = new javax.swing.JMenuItem();
        extraMenu = new javax.swing.JMenu();
        optionMenubutton = new javax.swing.JMenuItem();
        clearConsoleMenubutton = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OPA Standart Edition");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closingAction(evt);
            }
        });

        jcButton.setText("compiliere OOPSC");
        jcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oopscCompileAction(evt);
            }
        });

        ocButton.setText("compiliere OOPS");
        ocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oopsProgrammCompileAction(evt);
            }
        });

        fileButton.setText("...");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afterFileSelectAction(evt);
            }
        });

        inputField.setEnabled(false);
        inputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputFieldKeyTyped(evt);
            }
        });

        optionButton.setText("Optionen");
        optionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOptionAction(evt);
            }
        });

        vmButton.setText("compiliere OOPSVM");
        vmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oopsvmCompileAction(evt);
            }
        });

        ckearButton.setText("clear");
        ckearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleClearAction(evt);
            }
        });

        inputButton.setText("mit Eingabe");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manuellExecuteAction(evt);
            }
        });

        autoButton.setText("Starte mit .IO");
        autoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automatikExecuteAction(evt);
            }
        });

        jScrollPane1.setViewportView(consolePane);

        dataMenu.setText("Datei");

        openMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK));
        openMenuButton.setText("Datei Ã¶ffnen...");
        openMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afterFileSelectAction(evt);
            }
        });
        dataMenu.add(openMenuButton);
        dataMenu.add(closeSeparator);

        closMenuButton.setText("Beenden");
        closMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeingAction(evt);
            }
        });
        dataMenu.add(closMenuButton);

        jMenuBar1.add(dataMenu);

        compileMenu.setText("Compilieren");
        compileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oopscCompileAction(evt);
            }
        });

        cOCMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        cOCMenuButton.setText("compiliere OOPSC");
        compileMenu.add(cOCMenuButton);

        cOVMMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK));
        cOVMMenuButton.setText("compiliere OOPSVM");
        cOVMMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oopsvmCompileAction(evt);
            }
        });
        compileMenu.add(cOVMMenuButton);

        jMenuBar1.add(compileMenu);

        extraMenu.setText("Extras");

        optionMenubutton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));
        optionMenubutton.setText("Optionen");
        optionMenubutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOptionAction(evt);
            }
        });
        extraMenu.add(optionMenubutton);

        clearConsoleMenubutton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK));
        clearConsoleMenubutton.setText("Console leeren");
        clearConsoleMenubutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleClearAction(evt);
            }
        });
        extraMenu.add(clearConsoleMenubutton);

        jMenuBar1.add(extraMenu);

        helpMenu.setText("Hilfe");
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jcButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vmButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(optionButton))
            .addComponent(jSeparator1)
            .addComponent(inputField, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ckearButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(autoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ocButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcButton)
                    .addComponent(optionButton)
                    .addComponent(vmButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileButton)
                    .addComponent(ocButton)
                    .addComponent(inputButton)
                    .addComponent(autoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckearButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void afterFileSelectAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afterFileSelectAction
        fileChooser.setCurrentDirectory(new File (objHandler.getData("OOPS_PROGRAMM_PATH_IN").getStringValue()));
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            objHandler.setOOPSFiles(fileChooser.getSelectedFiles());
        }        
    }//GEN-LAST:event_afterFileSelectAction

    private void showOptionAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showOptionAction
    optionFrame.setVisible(true);
    optionFrame.setLocationRelativeTo(this);
    }//GEN-LAST:event_showOptionAction

    private void closingAction(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closingAction
        objHandler.save();
    }//GEN-LAST:event_closingAction

    private void oopscCompileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oopscCompileAction
        cHandler.compileOOPSC();
    }//GEN-LAST:event_oopscCompileAction

    private void oopsvmCompileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oopsvmCompileAction
        cHandler.compileOOPSVM();
    }//GEN-LAST:event_oopsvmCompileAction

    private void consoleClearAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consoleClearAction
        console.clear();
    }//GEN-LAST:event_consoleClearAction

    private void oopsProgrammCompileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oopsProgrammCompileAction
        cHandler.compileOOPS();
    }//GEN-LAST:event_oopsProgrammCompileAction

    private void manuellExecuteAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manuellExecuteAction
if(inputButton.isSelected()){
            if(eHandler.execManuell()){
                inputField.requestFocus();
                inputField.setEnabled(true);
                autoButton.setEnabled(false);
                ocButton.setEnabled(false);
            }else{
                inputButton.setSelected(false);
                console.write("ERROR", Color.RED, true);
                console.write(" No selected OOPS-Program.");
            }
        }else{
            inputField.setEnabled(false);
            inputField.setText("");
            autoButton.setEnabled(true);
            ocButton.setEnabled(true);
            eHandler.abbort();
        }
    }//GEN-LAST:event_manuellExecuteAction

    private void inputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyTyped
        if(evt.getKeyChar() == '\n'){
            eHandler.ioManuell(inputField.getText());
            inputField.setText("");
        }
    }//GEN-LAST:event_inputFieldKeyTyped

    private void automatikExecuteAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automatikExecuteAction
        if(autoButton.isSelected()){
                inputButton.setEnabled(false);
                ocButton.setEnabled(false);
            if(eHandler.execAuto()){
                inputButton.setEnabled(true);
                ocButton.setEnabled(true);
                autoButton.setSelected(false);
            }
        }else{
            inputButton.setEnabled(true);
            ocButton.setEnabled(true);
            eHandler.abbort();
        }
    }//GEN-LAST:event_automatikExecuteAction

    private void closeingAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeingAction
        // TODO add your handling code here:
    }//GEN-LAST:event_closeingAction

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton autoButton;
    private javax.swing.JMenuItem cOCMenuButton;
    private javax.swing.JMenuItem cOVMMenuButton;
    private javax.swing.JButton ckearButton;
    private javax.swing.JMenuItem clearConsoleMenubutton;
    private javax.swing.JMenuItem closMenuButton;
    private javax.swing.JPopupMenu.Separator closeSeparator;
    private javax.swing.JMenu compileMenu;
    private javax.swing.JTextPane consolePane;
    private javax.swing.JMenu dataMenu;
    private javax.swing.JMenu extraMenu;
    private javax.swing.JButton fileButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JToggleButton inputButton;
    private javax.swing.JTextField inputField;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jcButton;
    private javax.swing.JButton ocButton;
    private javax.swing.JMenuItem openMenuButton;
    private javax.swing.JButton optionButton;
    private javax.swing.JMenuItem optionMenubutton;
    private javax.swing.JButton vmButton;
    // End of variables declaration//GEN-END:variables

    
    private void setFilter(){
        final String programmFileType = objHandler.getData("OOPS_PROGRAMM_TYPE").getStringValue();
        fileChooser.setFileFilter( new FileFilter() {
            @Override
            public boolean accept(File f) {
                return (f.getName().toLowerCase().endsWith(programmFileType) || f.isDirectory());
            }
            @Override
            public String getDescription() {
                    return programmFileType+" / OOPS Programme";
            }
        });
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(true);
    }
}
